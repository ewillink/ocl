/*
* generated by Xtext
*/
grammar InternalMarkup;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.ocl.examples.xtext.base.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.ocl.examples.xtext.base.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.ocl.examples.xtext.base.services.MarkupGrammarAccess;

}

@parser::members {
 
 	private MarkupGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MarkupGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMarkup
entryRuleMarkup 
:
{ before(grammarAccess.getMarkupRule()); }
	 ruleMarkup
{ after(grammarAccess.getMarkupRule()); } 
	 EOF 
;

// Rule Markup
ruleMarkup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMarkupAccess().getElementsAssignment()); }
(rule__Markup__ElementsAssignment)*
{ after(grammarAccess.getMarkupAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMarkupElement
entryRuleMarkupElement 
:
{ before(grammarAccess.getMarkupElementRule()); }
	 ruleMarkupElement
{ after(grammarAccess.getMarkupElementRule()); } 
	 EOF 
;

// Rule MarkupElement
ruleMarkupElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMarkupElementAccess().getAlternatives()); }
(rule__MarkupElement__Alternatives)
{ after(grammarAccess.getMarkupElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextElement
entryRuleTextElement 
:
{ before(grammarAccess.getTextElementRule()); }
	 ruleTextElement
{ after(grammarAccess.getTextElementRule()); } 
	 EOF 
;

// Rule TextElement
ruleTextElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextElementAccess().getTextAssignment()); }
(rule__TextElement__TextAssignment)
{ after(grammarAccess.getTextElementAccess().getTextAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewLineElement
entryRuleNewLineElement 
:
{ before(grammarAccess.getNewLineElementRule()); }
	 ruleNewLineElement
{ after(grammarAccess.getNewLineElementRule()); } 
	 EOF 
;

// Rule NewLineElement
ruleNewLineElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewLineElementAccess().getTextAssignment()); }
(rule__NewLineElement__TextAssignment)
{ after(grammarAccess.getNewLineElementAccess().getTextAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFontElement
entryRuleFontElement 
:
{ before(grammarAccess.getFontElementRule()); }
	 ruleFontElement
{ after(grammarAccess.getFontElementRule()); } 
	 EOF 
;

// Rule FontElement
ruleFontElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFontElementAccess().getGroup()); }
(rule__FontElement__Group__0)
{ after(grammarAccess.getFontElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImageElement
entryRuleImageElement 
:
{ before(grammarAccess.getImageElementRule()); }
	 ruleImageElement
{ after(grammarAccess.getImageElementRule()); } 
	 EOF 
;

// Rule ImageElement
ruleImageElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImageElementAccess().getGroup()); }
(rule__ImageElement__Group__0)
{ after(grammarAccess.getImageElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStyleElement
entryRuleStyleElement 
:
{ before(grammarAccess.getStyleElementRule()); }
	 ruleStyleElement
{ after(grammarAccess.getStyleElementRule()); } 
	 EOF 
;

// Rule StyleElement
ruleStyleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStyleElementAccess().getAlternatives()); }
(rule__StyleElement__Alternatives)
{ after(grammarAccess.getStyleElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefElement
entryRuleRefElement 
:
{ before(grammarAccess.getRefElementRule()); }
	 ruleRefElement
{ after(grammarAccess.getRefElementRule()); } 
	 EOF 
;

// Rule RefElement
ruleRefElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefElementAccess().getGroup()); }
(rule__RefElement__Group__0)
{ after(grammarAccess.getRefElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MarkupElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMarkupElementAccess().getFontElementParserRuleCall_0()); }
	ruleFontElement
{ after(grammarAccess.getMarkupElementAccess().getFontElementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMarkupElementAccess().getTextElementParserRuleCall_1()); }
	ruleTextElement
{ after(grammarAccess.getMarkupElementAccess().getTextElementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMarkupElementAccess().getNewLineElementParserRuleCall_2()); }
	ruleNewLineElement
{ after(grammarAccess.getMarkupElementAccess().getNewLineElementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getMarkupElementAccess().getImageElementParserRuleCall_3()); }
	ruleImageElement
{ after(grammarAccess.getMarkupElementAccess().getImageElementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getMarkupElementAccess().getRefElementParserRuleCall_4()); }
	ruleRefElement
{ after(grammarAccess.getMarkupElementAccess().getRefElementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getMarkupElementAccess().getStyleElementParserRuleCall_5()); }
	ruleStyleElement
{ after(grammarAccess.getMarkupElementAccess().getStyleElementParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getGroup_0()); }
(rule__StyleElement__Group_0__0)
{ after(grammarAccess.getStyleElementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStyleElementAccess().getGroup_1()); }
(rule__StyleElement__Group_1__0)
{ after(grammarAccess.getStyleElementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__FontElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FontElement__Group__0__Impl
	rule__FontElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FontElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontElementAccess().getFontAssignment_0()); }
(rule__FontElement__FontAssignment_0)
{ after(grammarAccess.getFontElementAccess().getFontAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FontElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FontElement__Group__1__Impl
	rule__FontElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FontElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontElementAccess().getElementsAssignment_1()); }
(rule__FontElement__ElementsAssignment_1)*
{ after(grammarAccess.getFontElementAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FontElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FontElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FontElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontElementAccess().getIKeyword_2()); }

	'</i>' 

{ after(grammarAccess.getFontElementAccess().getIKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImageElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group__0__Impl
	rule__ImageElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getImgKeyword_0()); }

	'<img' 

{ after(grammarAccess.getImageElementAccess().getImgKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group__1__Impl
	rule__ImageElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getSrcKeyword_1()); }

	'src' 

{ after(grammarAccess.getImageElementAccess().getSrcKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group__2__Impl
	rule__ImageElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getImageElementAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group__3__Impl
	rule__ImageElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getSrcAssignment_3()); }
(rule__ImageElement__SrcAssignment_3)
{ after(grammarAccess.getImageElementAccess().getSrcAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageElement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group__4__Impl
	rule__ImageElement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getGroup_4()); }
(rule__ImageElement__Group_4__0)?
{ after(grammarAccess.getImageElementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageElement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group__5__Impl
	rule__ImageElement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getGroup_5()); }
(rule__ImageElement__Group_5__0)?
{ after(grammarAccess.getImageElementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageElement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getSolidusGreaterThanSignKeyword_6()); }

	'/>' 

{ after(grammarAccess.getImageElementAccess().getSolidusGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ImageElement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group_4__0__Impl
	rule__ImageElement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getAltKeyword_4_0()); }

	'alt' 

{ after(grammarAccess.getImageElementAccess().getAltKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageElement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group_4__1__Impl
	rule__ImageElement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getEqualsSignKeyword_4_1()); }

	'=' 

{ after(grammarAccess.getImageElementAccess().getEqualsSignKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageElement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getAltAssignment_4_2()); }
(rule__ImageElement__AltAssignment_4_2)
{ after(grammarAccess.getImageElementAccess().getAltAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImageElement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group_5__0__Impl
	rule__ImageElement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getDefKeyword_5_0()); }

	'def' 

{ after(grammarAccess.getImageElementAccess().getDefKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageElement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group_5__1__Impl
	rule__ImageElement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getEqualsSignKeyword_5_1()); }

	'=' 

{ after(grammarAccess.getImageElementAccess().getEqualsSignKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImageElement__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImageElement__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getDefAssignment_5_2()); }
(rule__ImageElement__DefAssignment_5_2)
{ after(grammarAccess.getImageElementAccess().getDefAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StyleElement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleElement__Group_0__0__Impl
	rule__StyleElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getStyleAssignment_0_0()); }
(rule__StyleElement__StyleAssignment_0_0)
{ after(grammarAccess.getStyleElementAccess().getStyleAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StyleElement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleElement__Group_0__1__Impl
	rule__StyleElement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getElementsAssignment_0_1()); }
(rule__StyleElement__ElementsAssignment_0_1)*
{ after(grammarAccess.getStyleElementAccess().getElementsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StyleElement__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleElement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getB1Keyword_0_2()); }

	'</b1>' 

{ after(grammarAccess.getStyleElementAccess().getB1Keyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StyleElement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleElement__Group_1__0__Impl
	rule__StyleElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getStyleAssignment_1_0()); }
(rule__StyleElement__StyleAssignment_1_0)
{ after(grammarAccess.getStyleElementAccess().getStyleAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StyleElement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleElement__Group_1__1__Impl
	rule__StyleElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getElementsAssignment_1_1()); }
(rule__StyleElement__ElementsAssignment_1_1)*
{ after(grammarAccess.getStyleElementAccess().getElementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StyleElement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StyleElement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getB2Keyword_1_2()); }

	'</b2>' 

{ after(grammarAccess.getStyleElementAccess().getB2Keyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RefElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefElement__Group__0__Impl
	rule__RefElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefElementAccess().getRefKeyword_0()); }

	'<ref' 

{ after(grammarAccess.getRefElementAccess().getRefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefElement__Group__1__Impl
	rule__RefElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefElementAccess().getRefAssignment_1()); }
(rule__RefElement__RefAssignment_1)
{ after(grammarAccess.getRefElementAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefElementAccess().getSolidusGreaterThanSignKeyword_2()); }

	'/>' 

{ after(grammarAccess.getRefElementAccess().getSolidusGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Markup__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMarkupAccess().getElementsMarkupElementParserRuleCall_0()); }
	ruleMarkupElement{ after(grammarAccess.getMarkupAccess().getElementsMarkupElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextElement__TextAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextElementAccess().getTextTEXTTerminalRuleCall_0()); }
	RULE_TEXT{ after(grammarAccess.getTextElementAccess().getTextTEXTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewLineElement__TextAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewLineElementAccess().getTextNLTerminalRuleCall_0()); }
	RULE_NL{ after(grammarAccess.getNewLineElementAccess().getTextNLTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FontElement__FontAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontElementAccess().getFontIKeyword_0_0()); }
(
{ before(grammarAccess.getFontElementAccess().getFontIKeyword_0_0()); }

	'<i>' 

{ after(grammarAccess.getFontElementAccess().getFontIKeyword_0_0()); }
)

{ after(grammarAccess.getFontElementAccess().getFontIKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FontElement__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontElementAccess().getElementsMarkupElementParserRuleCall_1_0()); }
	ruleMarkupElement{ after(grammarAccess.getFontElementAccess().getElementsMarkupElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__SrcAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getSrcSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getImageElementAccess().getSrcSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__AltAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getAltSTRINGTerminalRuleCall_4_2_0()); }
	RULE_STRING{ after(grammarAccess.getImageElementAccess().getAltSTRINGTerminalRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImageElement__DefAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageElementAccess().getDefSTRINGTerminalRuleCall_5_2_0()); }
	RULE_STRING{ after(grammarAccess.getImageElementAccess().getDefSTRINGTerminalRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__StyleAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getStyleB1Keyword_0_0_0()); }
(
{ before(grammarAccess.getStyleElementAccess().getStyleB1Keyword_0_0_0()); }

	'<b1>' 

{ after(grammarAccess.getStyleElementAccess().getStyleB1Keyword_0_0_0()); }
)

{ after(grammarAccess.getStyleElementAccess().getStyleB1Keyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__ElementsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getElementsMarkupElementParserRuleCall_0_1_0()); }
	ruleMarkupElement{ after(grammarAccess.getStyleElementAccess().getElementsMarkupElementParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__StyleAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getStyleB2Keyword_1_0_0()); }
(
{ before(grammarAccess.getStyleElementAccess().getStyleB2Keyword_1_0_0()); }

	'<b2>' 

{ after(grammarAccess.getStyleElementAccess().getStyleB2Keyword_1_0_0()); }
)

{ after(grammarAccess.getStyleElementAccess().getStyleB2Keyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StyleElement__ElementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStyleElementAccess().getElementsMarkupElementParserRuleCall_1_1_0()); }
	ruleMarkupElement{ after(grammarAccess.getStyleElementAccess().getElementsMarkupElementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefElement__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefElementAccess().getRefSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getRefElementAccess().getRefSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\'|'<'|'>')|~(('\\'|'"')))* '"';

RULE_TEXT : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\'|'<'|'>')|'_' '\'' ~(('\\'|'\''))* '\''|~(('\\'|'\''|'\n')))* '\'';

RULE_NL : '\n';

RULE_WS : (' '|'\t'|'\r')+;

RULE_ANY_OTHER : .;



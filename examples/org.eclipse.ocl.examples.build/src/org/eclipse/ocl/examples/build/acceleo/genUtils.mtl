[comment encoding = UTF-8 /]
[module genUtils('http://www.eclipse.org/ocl/3.2.0/OCL','http://www.eclipse.org/emf/2002/Ecore')/]

[query public cgEncodeName(elem : NamedElement) : String =
invoke('org.eclipse.ocl.examples.build.acceleo.NameQueries', 'encodeName(org.eclipse.ocl.examples.pivot.NamedElement)', Sequence{elem}) /]

[query public cgGetUnspecializedClass(elem : Class) : Class = 
if elem.unspecializedElement->notEmpty() then elem.unspecializedElement.oclAsType(Class) else elem endif /]

[query public defineSymbolName(elem : OclAny, symbol : String) : String = 
invoke('org.eclipse.ocl.examples.build.acceleo.NameQueries', 'defineSymbolName(java.lang.Object, java.lang.String)', Sequence{elem, symbol}) /]

[query public getSymbolName(elem : OclAny) : String = 
invoke('org.eclipse.ocl.examples.build.acceleo.NameQueries', 'getSymbolName(java.lang.Object)', Sequence{elem}) /]

[query public getPrefixedSymbolName(prefix : String, elem : OclAny) : String = 
invoke('org.eclipse.ocl.examples.build.acceleo.NameQueries', 'getPrefixedSymbolName(java.lang.String, java.lang.Object)', Sequence{prefix, elem}) /]

[query public javaString(rawString : String) : String = 
invoke('org.eclipse.xtext.util.Strings', 'convertToJavaString(java.lang.String)', Sequence{rawString}) /]
